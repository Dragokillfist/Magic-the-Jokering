[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# initiate variables
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "rental_rate = 3,"
position = "after"
payload = '''
    mtg_storm_count = 0,
    mtg_bonus_chips = 0,
'''
match_indent = true

# increment storm
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "local used_tarot = copier or self"
position = "after"
payload = '''
    G.GAME.mtg_storm_count = G.GAME.mtg_storm_count + 1
'''
match_indent = true

# reset storm
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.RESET_JIGGLES = nil"
position = "after"
payload = '''
    G.GAME.mtg_storm_count = 0
'''
match_indent = true

# reset storm
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.RESET_JIGGLES = true"
position = "after"
payload = '''
    G.GAME.mtg_storm_count = 0
'''
match_indent = true

# get suit changes to work
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "function Card:is_suit(suit, bypass_debuff, flush_calc)"
position = "after"
payload = '''
    if suit == 'Diamonds' and next(find_joker('mtg-celestialdawn')) then
		return true
	elseif suit == 'Hearts' and next(find_joker('mtg-bloodmoon')) then
		return true
	elseif suit == 'Spades' and next(find_joker('mtg-urborg')) then
		return true
	elseif suit == 'Clubs' and next(find_joker('mtg-harbinger')) then
		return true 
    end
'''
match_indent = true

# add bonus damage
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "ease_to = G.GAME.chips + math.floor(hand_chips*mult),"
position = "after"
payload = '''ease_to = G.GAME.chips + math.floor(hand_chips*mult) + math.floor(G.GAME.mtg_bonus_chips),
'''
match_indent = true

# reset bonus damage
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.FUNCS.evaluate_play()"
position = "after"
payload = '''
	G.GAME.mtg_bonus_chips = 0
'''
match_indent = true

# Obliterate - don't lose
[[patches]]
[patches.regex]
target = "functions/state_events.lua"
pattern = '''game_over = false
(?<indent>[\t ]*)end
[\t ]*for i = 1, #G.jokers.cards do'''
position = 'at'
# match_indent = true
line_prepend = '$indent'
payload = '''
game_over = false
end
if G.GAME.current_round.instant_win and game_over then
    game_over = false
end
for i = 1, #G.jokers.cards do
'''

# Obliterate - reset value at start of round
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.GAME.blind:set_blind(G.GAME.round_resets.blind)"
position = "after"
payload = '''
G.GAME.current_round.instant_win = false
'''
match_indent = true

# Obliterate - end screen text
[[patches]]
[patches.regex]
target = "functions/common_events.lua"
pattern = '''localize\('ph_mr_bones'\)..' '\}, colours = \{G.C.FILTER'''
position = 'at'
# match_indent = true
line_prepend = ''
payload = '''(G.GAME.current_round.instant_win and "OBLITERATED" or localize('ph_mr_bones'))..' '}, colours = {(G.C.FILTER)'''
